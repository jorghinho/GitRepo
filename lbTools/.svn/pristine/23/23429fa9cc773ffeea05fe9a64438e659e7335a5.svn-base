------------------------------------------------------------------------------------------------------------------------------------------------
--Descripcion: Herramienta Plantilla.
------------------------------------------------------------------------------------------------------------------------------------------------
(
	------------------------------------------------------------------------------------------------------------------------------------------------
	--@rollout: rollMain | Contiene la herramienta plantilla.
	------------------------------------------------------------------------------------------------------------------------------------------------
	rollout rollMainDef "Make Preview Settings"
	(
		------------------------------------------------------------------------------------------------
		--COMMON
		------------------------------------------------------------------------------------------------
		
		local parent = lb.getTool (lb.getFileToolName (getThisScriptFilename() as string)) --@var : parent | Herramienta o rolllout del que depende y/o contiene el rollout actual
		
		local minRollWidth = 176		--@var: minRollWidth | Ancho mínimo de la herramienta.
		local minRollHeight = 385		--@var: minRollHeight | Alto mínimo de la herramienta.
		
		------------------------------------------------------------------------------------------------
		--VARIABLES
		------------------------------------------------------------------------------------------------
		local styles = (for s in lb.preview.visualStyles collect s as string)
		local percents = (for s in lb.preview.percents collect s as string)
		local qualities = (for s in lb.preview.qualities collect s as string)

		------------------------------------------------------------------------------------------------
		--CONTROLS
		------------------------------------------------------------------------------------------------
		
		--@control | controlName | Plantilla de comentario para controles

		label lblPercent "Percent: " pos:[7,7]  
		dropdownlist ddlPercent "" pos:[60,5] width:70 items:percents selection:4 tooltip:"Select video percent size" --@control | controlName | Plantilla de comentario para controles
		label lblStyle "Style: " pos:[7,32] 
		dropdownlist ddlStyle "" pos:[60,30] width:110 items:styles selection:2 tooltip:"Select preview visual style" --@control | controlName | Plantilla de comentario para controles
		label lblQuality "Quality: " pos:[7,57]
		dropdownlist ddlQuality "" pos:[60,55] width:70 items:qualities selection:1 tooltip:"Select preview visual style" --@control | controlName | Plantilla de comentario para controles
		checkbox chkDOF "Use Depth of field" pos:[7,82] checked:true
		checkbox chkAutoname "Autoname file" pos:[7,102] checked:true
		groupBox grpStamps "Stamps" pos:[7,125] width:162 height:70
		checkbox chkUseStamps "Use stamps" pos:[17,145] checked:true
		button btnSetupStamps "Stamps setup" pos:[17,168] width:142 height:20 tooltip:"Configure stamps settings"
		groupbox gbxPreview "Preview modes:" pos: [7,200] width:162 height:155
		button btnMakePreview "Make preview" pos:[14,215] width:148 height:40 tooltip:"Create preview with this settings"
		button btnMakePreviewSkin "Make preview Skin Mode" pos:[14,260] width:148 height:40 tooltip:"Create preview with chars on skin mode"
		button btnMakePreviewSkinHair "Make preview Skin+Hair" pos:[14,305] width:148 height:40 tooltip:"Create preview with this settings"
		button btnOpenPreviewFolder "Open preview folder" pos:[7,360] width:162 height:20 tooltip:"Open folder where video was created"
		
		------------------------------------------------------------------------------------------------
		--FUNCTIONS
		------------------------------------------------------------------------------------------------
		
		------------------------------------------------
		--GETS
		------------------------------------------------
		
		------------------------------------------------
		--SETS
		------------------------------------------------
		
		------------------------------------------------
		--OTHER
		------------------------------------------------
		
		------------------------------------------------
		--COMMON
		------------------------------------------------
		
		------------------------------------------------
		--@fn: undefined | createSceneEvents | Crea los callbacks relacionados con el rollout
		------------------------------------------------
		fn createSceneEvents =
		(
		
		)
		
		------------------------------------------------
		--@fn: undefined | removeSceneEvents | Destruye los callbacks relacionados con el rollout
		------------------------------------------------
		fn removeSceneEvents =
		(
		
		)
		
		------------------------------------------------
		--@fn: undefined | resize | Redimensiona el UI.
		--@gets: point2 | size | Tamaño nuevo del rollout
		------------------------------------------------
		fn resize size =
		(
			------------------------------------------------------------------------------
			--si la herramienta se redimensiona más pequeña que el mínimo, lo limita al minimo
			if size.x < minRollWidth then (size.x = minRollWidth; rollMainDef.width = size.x)
			if size.y < minRollHeight then (size.y = minRollHeight; rollMainDef.height = size.y)
			------------------------------------------------------------------------------
			
			--calcula el incremento en ancho y alto, respecto al mínimo.
			_increment = [size.x - minRollWidth, size.y - minRollHeight]
			
			------------------------------------------------------------------------------
			--redimension en horizontal
			if _increment.x != 0 then --si hay incremento
			(
				
			)--if
			------------------------------------------------------------------------------
			
			------------------------------------------------------------------------------
			--redimension en vertical
			if _increment.y != 0 then --si hay incremento
			(
				
			)--if
			------------------------------------------------------------------------------
		)

		------------------------------------------------
		--@fn: undefined | saveSettings | Salva los settings de la herramienta en el documento de configuración de la misma.
		------------------------------------------------
		fn saveSettings =
		(
			--almacena posicion
			lb.xml.setAttribute parent.cfgFile ("rollMain/pos") "x" (((getDialogPos rollMainDef).x) as string)
			lb.xml.setAttribute parent.cfgFile ("rollMain/pos") "y" (((getDialogPos rollMainDef).y) as string)
			
			--almacena tamaño
			lb.xml.setAttribute parent.cfgFile ("rollMain/size") "width" (rollMainDef.width as string)
			lb.xml.setAttribute parent.cfgFile ("rollMain/size") "height" (rollMainDef.height as string)

 			--propiedades específicas
			lb.xml.setAttribute parent.cfgFile ("rollMain/settings") "percent" ddlPercent.selected
			lb.xml.setAttribute parent.cfgFile ("rollMain/settings") "style" ddlStyle.selected
			lb.xml.setAttribute parent.cfgFile ("rollMain/settings") "quality" ddlQuality.selected
			lb.xml.setAttribute parent.cfgFile ("rollMain/settings") "dof" chkDOF.checked
			lb.xml.setAttribute parent.cfgFile ("rollMain/settings") "autoname" chkAutoname.checked
			lb.xml.setAttribute parent.cfgFile ("rollMain/settings") "stamps" chkUseStamps.checked
		)
		
		------------------------------------------------
		--@fn: undefined | loadSettings | Carga los settings de la herramienta en el documento de configuración de la misma.
		------------------------------------------------
		fn loadSettings =
		(
			_width = (lb.xml.getAttribute parent.cfgFile ("rollMain/size") "width") as integer
			_height = (lb.xml.getAttribute parent.cfgFile ("rollMain/size") "height") as integer
			
			--posicion
			_posX = (lb.xml.getAttribute parent.cfgFile ("rollMain/pos") "x") as integer
			_posY = (lb.xml.getAttribute parent.cfgFile ("rollMain/pos") "y") as integer
			
			--establece minimos
			if _width < minRollWidth then _width = minRollWidth
			if _height < minRollHeight then _height = minRollHeight
			if _posX < 0 then _posX = 0
			if _posY < 0 then _posY = 0
			
			--aplica los valores
			rollMainDef.width = _width
			rollMainDef.height = _height
			setDialogPos rollMainDef [_posX,_posY]
			
			--propiedades específicas de la tool
			_percent = (lb.xml.getAttribute parent.cfgFile ("rollMain/settings") "percent")
			_style = (lb.xml.getAttribute parent.cfgFile ("rollMain/settings") "style")
			_quality = (lb.xml.getAttribute parent.cfgFile ("rollMain/settings") "quality")
			_dof = (lb.xml.getAttribute parent.cfgFile ("rollMain/settings") "dof")
			_autoname = (lb.xml.getAttribute parent.cfgFile ("rollMain/settings") "autoname")
			_stamps = (lb.xml.getAttribute parent.cfgFile ("rollMain/settings") "stamps")
			
			if _percent != "" do ddlPercent.selection = finditem rollMainDef.percents _percent
			if _style != "" do ddlStyle.selection = finditem rollMainDef.styles _style
			if _quality != "" do ddlQuality.selection = finditem rollMainDef.qualities _quality
			if _dof != "" do chkDOF.checked = execute _dof
			if _autoname != "" do chkAutoname.checked = execute _autoname
			if _stamps != "" do chkUseStamps.checked = execute _stamps

			-- Si no están activos los stamps, desactivar el botón de configurarlos
			if not chkUseStamps.checked do btnSetupStamps.enabled = false
			
			-- Cambiar texto del botón a "Save settings" si la herramienta se ha lanzado desde el CameraSequencer
			if parent.openedFromSequencer == true do btnMakePreview.text = "Save settings"
		)

		------------------------------------------------
		--@fn: string | getPreviewFolder | Devuelve la carpeta video correspondiente al plano de animación que esté abierto
		--@returns: string | Ruta a la carpeta video si el fichero cumple NC y existe, false si no
		------------------------------------------------
		fn getPreviewFolder =
		(
			local type = filterString maxfilepath "\\"
			local previewFolder = false
			local sequenceRe = "seq_\d{3}(\w-\w+)?(\(\w+\))?" -- seq_020b-igor(bea) ó seq_010
			local camRe = "cam\d{3}" -- cam010
			local fileRe = "\w:\\\\sequence(\\\\movie)?\\\\" + sequenceRe + "\\\\cam\\\\" + camRe + "\\\\" + type[type.count] + "\\\\" + sequenceRe + "_" + camRe + "_" + type[type.count] + "\.max"

			filename = maxfilepath + maxfilename

			if (lb.re.match filename fileRe) != false do
			(
				folder = ""
				parts = (filterstring maxfilepath "\\") -- #("Y:", "sequence", "movie", "seq_020b-igor(bea)", "cam", "cam005", "anim")
				for i=1 to parts.count-1 do folder += parts[i] + "\\"
				if type[type.count] == "anim" then
				(
					folder += "video"
				)
				else if type[type.count] == "stereo" then
				(
					folder = maxfilepath 
				)

				if doesfileexist folder do previewFolder = folder
			)
			
			previewFolder
		)
	
		
		------------------------------------------------------------------------------------------------
		--EVENTS
		------------------------------------------------------------------------------------------------
		------------------------------------------------
		--@event: pressed | Evento que se lanza al hacer click en el botón de Make Preview
		--@control: button | btnMakePreview | Botón que lanza el previo
		------------------------------------------------
		on chkUseStamps changed state do btnSetupStamps.enabled = state		

		--@event: pressed | Evento que se lanza al hacer click en el botón de Make Preview
		--@control: button | btnMakePreview | Botón que lanza el previo
		------------------------------------------------
		on btnSetupStamps pressed do
		(
			local toolCameraStamps = lb.getTool "cameraStamps"
			toolCameraStamps.run()
		)

		------------------------------------------------
		--@event: pressed | Evento que se lanza al hacer click en el botón de Make Preview
		--@control: button | btnMakePreview | Botón que lanza el previo
		------------------------------------------------
		on btnMakePreview pressed do 
		(
			-- Cerrar herramienta para forzar que se salven los settings
			parent.close()

			-- Si la herramienta no se ha abierto desde el CameraSequencer sacamos el previo, en caso contrario sólo salvamos los settings
			if parent.openedFromSequencer != true do
			(
				_tool = (lb.getScript "makePreview")
				_tool.run() --lanza el script
			)
		)

		------------------------------------------------
		--@event: pressed | Evento que se lanza al hacer click en el botón de Make Preview Skin
		--@control: button | btnMakePreviewSkin | Botón que lanza el previo
		------------------------------------------------
		on btnMakePreviewSkin pressed do 
		(
			_assetVisModes = #()
			_assets = lb.asset.getSceneAssets()
			for i = 1 to _assets.count do 
			(
				append _assetVisModes (lb.asset.getAssetVisMode _assets[i])
				lb.asset.setAssetSkinMode _assets[i]
				lb.asset.enableAssetTurbosmooths _assets[i]
			)

			-- Cerrar herramienta para forzar que se salven los settings
			parent.close()

			-- Si la herramienta no se ha abierto desde el CameraSequencer sacamos el previo, en caso contrario sólo salvamos los settings
			if parent.openedFromSequencer != true do
			(
				_tool = (lb.getScript "makePreview")
				_tool.run() --lanza el script
			)

			for i = 1 to _assets.count do 
			(
				lb.asset.disableAssetTurbosmooths _assets[i]
				case _assetVisModes[i] of 
				(
					"P"		: (lb.asset.setAssetPuppetMode _assets[i])
					"P+H"	: (lb.asset.setAssetPuppetHeadMode _assets[i])
					"H"		: (lb.asset.setAssetHeadMode _assets[i])
					"S"		: (lb.asset.setAssetSkinMode _assets[i])
					"S+B"	: (lb.asset.setAssetSkinBoxMode _assets[i])
					"B"		: (lb.asset.setAssetBoxMode _assets[i])
					"C"		: (lb.asset.setAssetClothMode _assets[i])
					"S+C"	: (lb.asset.setAssetSkinClothMode _assets[i])
					"H"		: (lb.asset.setAssetHairMode _assets[i])
					"S+H"	: (lb.asset.setAssetSkinHairMode _assets[i])
					"S+H+V"	: (lb.asset.setAssetSkinHairVideoMode _assets[i])
					"CA"	: (lb.asset.setAssetConnectAllMode _assets[i])
					default : 
							(
								if (filterString maxfilename "_")[4] == lb.nc.NC_animFileName then 
								(
									lb.asset.setAssetPuppetMode _assets[i]
								)
								else 
								(
									lb.asset.setAssetSkinMode _assets[i]
								)
							)
				)
			)
			--for _asset in _assets do lb.asset.setAssetSkinHairVideoMode _asset
		)


		------------------------------------------------
		--@event: pressed | Evento que se lanza al hacer click en el botón de Make Preview Skin
		--@control: button | btnMakePreviewSkinHair | Botón que lanza el previo
		------------------------------------------------
		on btnMakePreviewSkinHair pressed do 
		(
			_assetVisModes = #()
			_assets = lb.asset.getSceneAssets()
			for i = 1 to _assets.count do 
			(
				append _assetVisModes (lb.asset.getAssetVisMode _assets[i])
				lb.asset.setAssetSkinHairVideoMode _assets[i]
				lb.asset.enableAssetTurbosmooths _assets[i]
			)

			-- Cerrar herramienta para forzar que se salven los settings
			parent.close()

			-- Si la herramienta no se ha abierto desde el CameraSequencer sacamos el previo, en caso contrario sólo salvamos los settings
			if parent.openedFromSequencer != true do
			(
				_tool = (lb.getScript "makePreview")
				_tool.run() --lanza el script
			)

			for i = 1 to _assets.count do 
			(
				lb.asset.disableAssetTurbosmooths _assets[i]
				case _assetVisModes[i] of 
				(
					"P"		: (lb.asset.setAssetPuppetMode _assets[i])
					"P+H"	: (lb.asset.setAssetPuppetHeadMode _assets[i])
					"H"		: (lb.asset.setAssetHeadMode _assets[i])
					"S"		: (lb.asset.setAssetSkinMode _assets[i])
					"S+B"	: (lb.asset.setAssetSkinBoxMode _assets[i])
					"B"		: (lb.asset.setAssetBoxMode _assets[i])
					"C"		: (lb.asset.setAssetClothMode _assets[i])
					"S+C"	: (lb.asset.setAssetSkinClothMode _assets[i])
					"H"		: (lb.asset.setAssetHairMode _assets[i])
					"S+H"	: (lb.asset.setAssetSkinHairMode _assets[i])
					"S+H+V"	: (lb.asset.setAssetSkinHairVideoMode _assets[i])
					"CA"	: (lb.asset.setAssetConnectAllMode _assets[i])
					default : 
							(
								if (filterString maxfilename "_")[4] == lb.nc.NC_animFileName then 
								(
									lb.asset.setAssetPuppetMode _assets[i]
								)
								else 
								(
									lb.asset.setAssetSkinMode _assets[i]
								)
							)
				)
			)
			--for _asset in _assets do lb.asset.setAssetSkinHairVideoMode _asset
		)


		------------------------------------------------
		--@event: pressed | Evento que se lanza al hacer click en el botón de Open Preview Folder
		--@control: button | btnOpenPreviewFolder | Botón que abre la carpeta
		------------------------------------------------
		on btnOpenPreviewFolder pressed do 
		(
			folder = getPreviewFolder()
			if folder != false then
				shellLaunch "explorer.exe" folder
			else
				messagebox "Could not open folder.\nFilename does not follow naming convention."
		)

		------------------------------------------------
		--COMMON
		------------------------------------------------
		
		------------------------------------------------
		--@event: resized | Evento que se lanza al redimensionar el rollout.
		--@control: rollout | rollMain | El elemento que sufre la redimensión. El rollout principal de la herramienta.
		--@gets: point2 | size | tamaño al que se ha redimensionado el rollout
		------------------------------------------------
		on rollMainDef resized size do
		(
			resize size
		)
		
		------------------------------------------------
		--@event: open | Evento que se lanza al abrir el rollout.
		--@control: rollout | rollMain | El elemento que se abre. El rollout principal de la herramienta.
		------------------------------------------------
		on rollMainDef open do
		(
			loadSettings()
			createSceneEvents() --crea los callbacks
			renderWidth = 2048
			renderHeight = 872
			if parent.rollMain != undefined then resize [parent.rollMain.width, parent.rollMain.height]
		)
		
		------------------------------------------------
		--@event: close | Evento que se lanza al cerrar el rollout.
		--@control: rollout | rollMain | El elemento que se cierra. El rollout principal de la herramienta.
		------------------------------------------------
		on rollMainDef close do
		(
			removeSceneEvents() --elimina los callbacks
			saveSettings()
			
			parent.opened = false --indica que la herramienta está cerrada.
			updateToolbarButtons()
		)
	)--rollMainDef
	
	------------------------------------------------------------------------------------------------------------------------------------------------
	--@struct: templateTool | Contiene la herramienta plantilla.
	------------------------------------------------------------------------------------------------------------------------------------------------
	struct tl_makePreviewSettings
	(
		------------------------------------------------------------------------------------------------
		--COMMON
		------------------------------------------------------------------------------------------------
		
		def = (classof this),				--@var: def | Almacena la definicion del struct.
		defFile = getThisScriptFilename(),	--@var: defFile | Almacena la ruta del propio archivo de script que contiene la definicion.
		
		category = #main,					--@var: category | Categoria de la tool.
		className = lb.getFileToolName (getThisScriptFilename() as string),	--@var: className | Nombre de la tool.
		description = "Make preview settings",		--@var: description | Descripcion de la tool.
		
		cfgFile = (lb.config.getToolsIniPath()) + (lb.getFileToolName (getThisScriptFilename() as string)) + ".cfg",	--@var: cfgFile | Archivo de configuracion de la tool.
			
		opened = false,			--@var: opened | Indica si la herramienta está abierta.

		openedFromSequencer = false,
			
		------------------------------------------------------------------------------------------------
		--VARIABLES
		------------------------------------------------------------------------------------------------
			
		------------------------------------------------------------------------------------------------
		--LIBRARIES
		------------------------------------------------------------------------------------------------
		
		------------------------------------------------------------------------------------------------
		--ROLLOUTS
		------------------------------------------------------------------------------------------------
		
		rollMain = rollMainDef,	--@var: rollMain | Almacena el rollout principal de la herramienta.
			
		------------------------------------------------------------------------------------------------
		--FUNCTIONS
		------------------------------------------------------------------------------------------------
			
		------------------------------------------------
		--GETS
		------------------------------------------------
		
		------------------------------------------------
		--SETS
		------------------------------------------------
		
		------------------------------------------------
		--OTHER
		------------------------------------------------
		
		------------------------------------------------
		--COMMON
		------------------------------------------------
		
		------------------------------------------------
		--@fn: boolean | isOpen | Devuelve información true o false, si la herramienta está abierta o cerrada.
		------------------------------------------------
		fn isOpen =
		(
			this.opened
		),
		
		------------------------------------------------
		--@fn: undefined | refreshInterface | Refresca el interface inicial de la herramienta
		------------------------------------------------
		fn refreshInterface =
		(
			--refresca el interface de la herramienta
		),
		
		------------------------------------------------
		--@fn: undefined | createInterface | Crea el interface inicial de la herramienta
		------------------------------------------------
		fn createInterface =
		(
			--crea el interface, lo redimensiona y lo reposiciona
			createDialog this.rollMain lockwidth:true lockheight:true pos:[-10000,0] style:#(#style_toolwindow, #style_titlebar, #style_sysmenu, #style_resizing)
		),
		
		------------------------------------------------
		--@fn: undefined | destroyInterface | Destruye el interface de la herramienta.
		------------------------------------------------
		fn destroyInterface =
		(
			destroyDialog this.rollMain --cierra la herramienta.			
		),--destroyInterface
		
		------------------------------------------------
		--@fn: undefined | run | Lanza la herramienta.
		--@opt: boolean | fromSequencer | indica si la tool se ha lanzado desde el CameraSequencer 
		------------------------------------------------
		fn run fromSequencer:false =
		(
			this.openedFromSequencer = fromSequencer
			this.createInterface() --crea el interface.
			this.opened = true --indica que la herramienta está abierta
		),--execute
		
		------------------------------------------------
		--@fn: undefined | close | Cierra la herramienta.
		------------------------------------------------
		fn close =
		(
			this.destroyInterface() --destruye el interface.
			this.opened = false --indica que la herramienta está cerrada.
		),
		
		------------------------------------------------
		--@fn: undefined | initSubLibraries | Inicializa todas las sublibrerías en el orden establecido.
		------------------------------------------------
		fn initSubLibraries =
		(
			_subLibraries = #()
			
			for sl in _subLibraries do sl.init()
		),
		
		------------------------------------------------
		--@fn: undefined | init | Inicializa la librería.
		------------------------------------------------
		fn init =
		(		
			this.initSubLibraries() --inicialza las librerías hijas
		),		
		
		------------------------------------------------------------------------------------------------
		--EVENTS
		------------------------------------------------------------------------------------------------
		
		------------------------------------------------
		--@event: create | Ejecución al crearse la instancia del struct.
		------------------------------------------------
		on create do
		(
			lb.addTool this --añade la tool a la libreria principal	
		)		
		
	)--tl_makePreviewSettings
	
	------------------------------------------------------------------------------------------------------------------------------------------------
	--EXECUTION
	------------------------------------------------------------------------------------------------------------------------------------------------	
	
	tl_makePreviewSettings() --crea la herramienta
)